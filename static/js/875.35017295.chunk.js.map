{"version":3,"file":"static/js/875.35017295.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","services/APIService.js"],"sourcesContent":["import { Suspense } from 'react';\nimport { NavLink, Link, Outlet } from 'react-router-dom';\n\nexport const MovieInfo = ({ data, location }) => {\n  const { poster_path, title, release_date, vote_average, overview } = data;\n  const genres =\n    data.genres.map(({ name }) => name).join(', ') ?? 'no info about genres';\n\n  return (\n    <>\n      <Link to={location.current}>Go Back</Link>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n        alt={poster_path}\n      />\n      <h1>\n        {title} ({parseInt(release_date)})\n      </h1>\n      <p>User Score: {vote_average.toFixed(2)}</p>\n      <h2>Overview</h2>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      <p>{genres}</p>\n      <div>\n        Additional information\n        <ul>\n          <li>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </li>\n        </ul>\n      </div>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n","import { getMovieDetails } from 'services/APIService';\nimport { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(setMovieInfo);\n  }, [movieId]);\n\n  return (\n    <>\n      {movieInfo && (\n        <MovieInfo data={movieInfo} location={backLinkLocationRef} />\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'api_key=5e1540d5ab73ca6abba3993527b5288a';\n\nasync function getTrendingMovies() {\n  const url = `${BASE_URL}/trending/movie/day?${API_KEY}`;\n  return await axios.get(url).then(({ data }) => data.results);\n}\n\nasync function getSearchedMovies(query) {\n  const url = `${BASE_URL}/search/movie?${API_KEY}&query=${query}`;\n  return await axios.get(url).then(({ data }) => data.results);\n}\n\nasync function getMovieDetails(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}?${API_KEY}`;\n  return await axios.get(url).then(({ data }) => data);\n}\n\nasync function getReviews(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?${API_KEY}`;\n  return await axios.get(url).then(({ data }) => data.results);\n}\n\nasync function getCast(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}/credits?${API_KEY}`;\n  return await axios.get(url).then(({ data }) => data.cast);\n}\n\nexport {\n  getTrendingMovies,\n  getSearchedMovies,\n  getMovieDetails,\n  getReviews,\n  getCast,\n};\n"],"names":["MovieInfo","data","location","poster_path","title","release_date","vote_average","overview","genres","map","name","join","to","current","src","alt","parseInt","toFixed","Suspense","useState","movieInfo","setMovieInfo","movieId","useParams","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getMovieDetails","then","BASE_URL","API_KEY","getTrendingMovies","url","axios","results","getSearchedMovies","query","getReviews","getCast","cast"],"sourceRoot":""}